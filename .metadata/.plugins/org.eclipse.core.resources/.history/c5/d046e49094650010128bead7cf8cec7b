package com.techlabs.model;

public class GameBoard {

	private char[][] board = new char[3][3];
	
	//3*3 blanks
	public GameBoard() {
		for (int i = 0; i<3; i++) {
			for (int j=0; j<3; j++) {
				System.out.print(board[i][j] = '_');
			}
			System.out.println();
		}
	}
	
	//display current board
	public void displayBoard() {
		System.out.println("\n  0 1 2");   
		for (int i =0; i<3; i++) {
			System.out.print(i + " ");   //For each row, prints its index first (0, 1, or 2) followed by a space
			for (int j = 0; j < 3; j++) {   //Goes through each column in the current row. Prints the symbol at that position (_, X, or O).
				System.out.print(board[i][j]);
				if (j != 2) {
					System.out.print(" ");  //only space, no blank or number
				}
			}
			System.out.println();   //move to next row
		}
	}
	
	//to check if a cell is empty
	public boolean isCellEmpty(int row, int col) {
		return board[row][col] =='_';
	}
	
	//to Place symbol on the board
    public void placeSymbol(int row, int col, Symbol symbol) {
    	board[row][col] = symbol.name().charAt(0);
    }
    
    //to check if board is full
    public boolean isFull() {
        for (char[] row : board)
            for (char cell : row)
                if (cell == '_') return false;
        return true;
    }
    
    //to check if the last move is a win
    public boolean isWinningMove(int row, int col, Symbol symbol) {
        char s = symbol.name().charAt(0);
        // Check row
        if (board[row][0] == s && board[row][1] == s && board[row][2] == s) return true;
        // Check column
        if (board[0][col] == s && board[1][col] == s && board[2][col] == s) return true;
        // Diagonals
        if (row == col && board[0][0] == s && board[1][1] == s && board[2][2] == s) return true;
        if (row + col == 2 && board[0][2] == s && board[1][1] == s && board[2][0] == s) return true;
        return false;
    }
}
